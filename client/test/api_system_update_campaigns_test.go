/*
Rudder API

Testing SystemUpdateCampaignsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package rudderclient

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/cloudducoeur/terraform-rudder-provider/client"
)

func Test_rudderclient_SystemUpdateCampaignsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SystemUpdateCampaignsAPIService GetCampaignEventResult", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.SystemUpdateCampaignsAPI.GetCampaignEventResult(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SystemUpdateCampaignsAPIService GetCampaignResults", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.SystemUpdateCampaignsAPI.GetCampaignResults(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SystemUpdateCampaignsAPIService GetSystemUpdateResultForNode", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string
		var nodeId string

		resp, httpRes, err := apiClient.SystemUpdateCampaignsAPI.GetSystemUpdateResultForNode(context.Background(), id, nodeId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SystemUpdateCampaignsAPIService GetSystemUpdateResultReport", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.SystemUpdateCampaignsAPI.GetSystemUpdateResultReport(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SystemUpdateCampaignsAPIService GetSystemUpdateSummaryReport", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var id string

		resp, httpRes, err := apiClient.SystemUpdateCampaignsAPI.GetSystemUpdateSummaryReport(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
